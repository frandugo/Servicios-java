package com.servicios.usuario;

import com.servicios.admin.AdminServicio;
import com.servicios.bean.ComboItemBean;
import com.servicios.bean.MantenimientoBean;
import com.servicios.bean.UsuarioBean;
import com.servicios.dao.EmpresaDAO;
import com.servicios.dao.MantenimientoDAO;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.servicios.dao.ServicioDAO;
import javax.swing.JOptionPane;

public class Mantenimiento extends javax.swing.JFrame {

    private int mantId;
    private UsuarioBean usuario;
    private ArrayList<ComboItemBean> empresas;
    private ArrayList<ComboItemBean> servicios;

    /**
     * Creates new form Mantenimiento
     */
    public Mantenimiento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnagregar = new javax.swing.JButton();
        btnbuscar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnactualizar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbmempresa = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbmservicio = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtdescripcion = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtfecha = new javax.swing.JFormattedTextField();
        txtmantid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblmantenimiento = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mantenimiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        btnagregar.setText("Agregar");
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });

        btnbuscar.setText("Buscar");
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnactualizar.setText("Actualizar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        jLabel3.setText("Descripci√≥n:");

        jLabel6.setText("Empresa:");

        jLabel7.setText("Servicio:");

        txtdescripcion.setColumns(20);
        txtdescripcion.setRows(3);
        jScrollPane1.setViewportView(txtdescripcion);

        jLabel4.setText("Fecha:");

        jLabel5.setText("Busqueda por Id");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnagregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(btnbuscar)
                        .addGap(67, 67, 67)
                        .addComponent(btnactualizar)
                        .addGap(65, 65, 65)
                        .addComponent(btneliminar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbmservicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbmempresa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(txtfecha)
                            .addComponent(txtmantid, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtmantid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbmempresa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbmservicio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnagregar)
                    .addComponent(btnbuscar)
                    .addComponent(btneliminar)
                    .addComponent(btnactualizar))
                .addGap(40, 40, 40))
        );

        tblmantenimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Servicio", "Descripcion", "Fecha", "Empresa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblmantenimiento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed
        try {
            if (cbmempresa.getSelectedIndex() > 0 && cbmservicio.getSelectedIndex() > 0 && !txtfecha.getText().isEmpty() && !txtdescripcion.getText().isEmpty()) {
                MantenimientoDAO dao = new MantenimientoDAO();
                ComboItemBean empresa = (ComboItemBean) cbmempresa.getSelectedItem();
                ComboItemBean servicio = (ComboItemBean) cbmservicio.getSelectedItem();

                MantenimientoBean mant = new MantenimientoBean();
                mant.setUsuaid(getUsuario().getUsuaid());
                mant.setEmprid(empresa.getValue());
                mant.setServid(servicio.getValue());
                mant.setMantfech(txtfecha.getText());
                mant.setMantdesc(txtdescripcion.getText());
                dao.insertMantenimiento(mant);
                //Carga de datos de mnto
                loadTablaMantenimiento();
                //Se limpian los campos
                limpiarCampos();
                //Mensaje
                JOptionPane.showMessageDialog(null, "Su mantenimiento fue registrado");
            } else {
                JOptionPane.showMessageDialog(null, "Los siguientes campos son obligatorios:\n\n"
                        + "* Empresa\n"
                        + "* Servicio\n"
                        + "* Fecha\n"
                        + "* Descripcion\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnagregarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {

            setLocationRelativeTo(null);
            //Listado empresas
            EmpresaDAO empresaDAO = new EmpresaDAO();
            empresas = empresaDAO.getComboEmpresas();
            cbmempresa.addItem(new ComboItemBean(0, "Seleccione..."));
            cbmservicio.addItem(new ComboItemBean(0, "Seleccione..."));
            for (ComboItemBean empresa : empresas) {
                cbmempresa.addItem(empresa);
            }

            //Listener de empresas para cargar servicios asociados
            cbmempresa.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        cbmservicio.removeAllItems();
                        cbmservicio.addItem(new ComboItemBean(0, "Seleccione..."));
                        try {
                            if (cbmempresa.getSelectedIndex() > 0) {
                                ComboItemBean empresa = (ComboItemBean) cbmempresa.getSelectedItem();
                                ServicioDAO servicioDAO = new ServicioDAO();
                                servicios = servicioDAO.getServiciosContratados(getUsuario().getUsuaid(), empresa.getValue());
                                for (ComboItemBean servicio : servicios) {
                                    cbmservicio.addItem(servicio);
                                }
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }
            });

            //Tabla de mnto
            loadTablaMantenimiento();

        } catch (SQLException ex) {
            Logger.getLogger(AdminServicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formComponentShown

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        try {

            if (cbmempresa.getSelectedIndex() > 0 && cbmservicio.getSelectedIndex() > 0 && !txtfecha.getText().isEmpty() && !txtdescripcion.getText().isEmpty() && getMantId() > 0) {
                MantenimientoDAO dao = new MantenimientoDAO();

                ComboItemBean empresa = (ComboItemBean) cbmempresa.getSelectedItem();
                ComboItemBean servicio = (ComboItemBean) cbmservicio.getSelectedItem();

                MantenimientoBean mant = new MantenimientoBean();
                mant.setUsuaid(getUsuario().getUsuaid());
                mant.setEmprid(empresa.getValue());
                mant.setServid(servicio.getValue());
                mant.setMantid(getMantId());
                mant.setMantfech(txtfecha.getText());
                mant.setMantdesc(txtdescripcion.getText());
                dao.updateMantenimiento(mant);
                //Carga de datos de mnto
                loadTablaMantenimiento();
                //Se limpian los campos
                limpiarCampos();
                //Mensaje
                JOptionPane.showMessageDialog(null, "Su mantenimiento fue actualizado");
            } else {
                JOptionPane.showMessageDialog(null, "Los siguientes campos son obligatorios:\n\n"
                        + "* Empresa\n"
                        + "* Servicio\n"
                        + "* Fecha\n"
                        + "* Descripcion\n"
                        + "* Buscar por Id\n");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        try {
            if (cbmempresa.getSelectedIndex() > 0 && cbmservicio.getSelectedIndex() > 0 && !txtmantid.getText().isEmpty()) {
                MantenimientoDAO dao = new MantenimientoDAO();

                ComboItemBean empr = (ComboItemBean) cbmempresa.getSelectedItem();
                ComboItemBean serv = (ComboItemBean) cbmservicio.getSelectedItem();

                MantenimientoBean mant = new MantenimientoBean();
                mant.setUsuaid(getUsuario().getUsuaid());
                mant.setEmprid(empr.getValue());
                mant.setServid(serv.getValue());
                mant.setMantid(Integer.parseInt(txtmantid.getText()));
                mant = dao.searchMantenimientos(mant);

                if (mant != null) {

                    for (ComboItemBean empresa : empresas) {
                        if (empresa.getValue() == mant.getEmprid()) {
                            cbmempresa.setSelectedItem(empresa);
                            break;
                        }
                    }

                    for (ComboItemBean servicio : servicios) {
                        if (servicio.getValue() == mant.getServid()) {
                            cbmservicio.setSelectedItem(servicio);
                            break;
                        }
                    }

                    txtdescripcion.setText(mant.getMantdesc());
                    txtfecha.setText(mant.getMantfech());
                    setMantId(mant.getMantid());

                } else {
                    JOptionPane.showMessageDialog(null, "No se encontraron datos relacionados al Id");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Los siguientes campos son obligatorios:\n\n"
                        + "* Empresa\n"
                        + "* Servicio\n"
                        + "* Buscar por Id\n");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        try {

            if (cbmempresa.getSelectedIndex() > 0 && cbmservicio.getSelectedIndex() > 0 && getMantId() > 0) {
                MantenimientoDAO dao = new MantenimientoDAO();

                ComboItemBean empresa = (ComboItemBean) cbmempresa.getSelectedItem();
                ComboItemBean servicio = (ComboItemBean) cbmservicio.getSelectedItem();

                MantenimientoBean mant = new MantenimientoBean();
                mant.setUsuaid(getUsuario().getUsuaid());
                mant.setEmprid(empresa.getValue());
                mant.setServid(servicio.getValue());
                mant.setMantid(Integer.parseInt(txtmantid.getText()));
                dao.deleteMantenimiento(mant);
                //Tabla de mnto
                loadTablaMantenimiento();
                //Se limpian los campos
                limpiarCampos();
                JOptionPane.showMessageDialog(null, "Su mantenimiento fue eliminado");
            } else {
                JOptionPane.showMessageDialog(null, "Los siguientes campos son obligatorios:\n\n"
                        + "* Empresa\n"
                        + "* Servicio\n"
                        + "* Buscar por Id\n");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btneliminarActionPerformed

    public void loadTablaMantenimiento() {
        try {

            MantenimientoDAO dao = new MantenimientoDAO();
            ArrayList<MantenimientoBean> mantenimientos = dao.getMantenimientosUsuario(getUsuario().getUsuaid());
            String col[] = {"Id", "Servicio", "Descripcion", "Fecha", "Empresa"};
            DefaultTableModel defaultTableModel = new DefaultTableModel(col, 0);
            for (MantenimientoBean mnto : mantenimientos) {
                Object[] data = {mnto.getMantid(), mnto.getServnomb(), mnto.getMantdesc(), mnto.getMantfech(), mnto.getEmprnomb()};
                defaultTableModel.addRow(data);
            }
            tblmantenimiento.setModel(defaultTableModel);

        } catch (SQLException ex) {
            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void limpiarCampos() {
        cbmempresa.setSelectedIndex(0);
        txtfecha.setText("");
        txtdescripcion.setText("");
        txtmantid.setText("");
        setMantId(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Mantenimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btnagregar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btneliminar;
    private javax.swing.JComboBox cbmempresa;
    private javax.swing.JComboBox cbmservicio;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblmantenimiento;
    private javax.swing.JTextArea txtdescripcion;
    private javax.swing.JFormattedTextField txtfecha;
    private javax.swing.JTextField txtmantid;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the usuario
     */
    public UsuarioBean getUsuario() {
        return usuario;
    }

    /**
     * @param usuario the usuario to set
     */
    public void setUsuario(UsuarioBean usuario) {
        this.usuario = usuario;
    }

    /**
     * @return the mantId
     */
    public int getMantId() {
        return mantId;
    }

    /**
     * @param mantId the mantId to set
     */
    public void setMantId(int mantId) {
        this.mantId = mantId;
    }
}
